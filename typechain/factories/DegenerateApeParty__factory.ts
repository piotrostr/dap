/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DegenerateApeParty,
  DegenerateApePartyInterface,
} from "../DegenerateApeParty";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_routerAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "dapAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "AddedLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountDap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountETH",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountDap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "elevatedFees",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IPancakeFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketingWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IPancakeRouter02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "setMarketingWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountDap",
        type: "uint256",
      },
    ],
    name: "swapDapForEth",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradingEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526a084595161401484a000000600655600880556001600955600a80546209c40063ffffffff19909116179055600c805460ff60a01b1916600160a01b1790553480156200005057600080fd5b5060405162001e6d38038062001e6d8339810160408190526200007391620004ce565b60405180604001604052806012815260200171446567656e6572617465417065506172747960701b8152506040518060400160405280600381526020016204441560ec1b8152508160039080519060200190620000d292919062000428565b508051620000e890600490602084019062000428565b50505062000105620000ff620002ea60201b60201c565b620002ee565b620001256200011c6005546001600160a01b031690565b60065462000340565b600554600780546001600160a01b03199081166001600160a01b0393841617909155600b805490911691831691821790556040805163c45a015560e01b8152905163c45a0155916004808201926020929091908290030181865afa15801562000192573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b89190620004ce565b600c80546001600160a01b0319166001600160a01b03928316908117909155600b54604080516315ab88c960e31b81529051929363c9c653969330939091169163ad5c46489160048083019260209291908290030181865afa15801562000223573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002499190620004ce565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801562000297573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002bd9190620004ce565b600a60046101000a8154816001600160a01b0302191690836001600160a01b031602179055505062000563565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200039b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620003af919062000500565b90915550506001600160a01b03821660009081526020819052604081208054839290620003de90849062000500565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620004369062000527565b90600052602060002090601f0160209004810192826200045a5760008555620004a5565b82601f106200047557805160ff1916838001178555620004a5565b82800160010185558215620004a5579182015b82811115620004a557825182559160200191906001019062000488565b50620004b3929150620004b7565b5090565b5b80821115620004b35760008155600101620004b8565b600060208284031215620004e157600080fd5b81516001600160a01b0381168114620004f957600080fd5b9392505050565b600082198211156200052257634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200053c57607f821691505b6020821081036200055d57634e487b7160e01b600052602260045260246000fd5b50919050565b6118fa80620005736000396000f3fe6080604052600436106101c65760003560e01c806375f0a874116100f7578063a9059cbb11610095578063dd62ed3e11610064578063dd62ed3e14610536578063ddf545121461057c578063f2fde38b14610591578063f887ea40146105b157600080fd5b8063a9059cbb146104af578063bf609c87146104cf578063c45a0155146104fc578063d93e709d1461051c57600080fd5b806398118cb4116100d157806398118cb4146104165780639cd441da1461042c578063a457c2d714610467578063a8aa1b311461048757600080fd5b806375f0a874146103ab5780638da5cb5b146103e357806395d89b411461040157600080fd5b806339509351116101645780635d098b381161013e5780635d098b381461032a5780636b67c4df1461034a57806370a0823114610360578063715018a61461039657600080fd5b806339509351146102d45780633ccfd60b146102f45780634ada218b1461030957600080fd5b80630f120fc3116101a05780630f120fc31461026257806318160ddd1461027957806323b872dd14610298578063313ce567146102b857600080fd5b806306fdde03146101d2578063089fe6aa146101fd578063095ea7b31461023257600080fd5b366101cd57005b600080fd5b3480156101de57600080fd5b506101e76105d1565b6040516101f491906114b2565b60405180910390f35b34801561020957600080fd5b50600a5461021e90610100900462ffffff1681565b60405162ffffff90911681526020016101f4565b34801561023e57600080fd5b5061025261024d36600461151c565b610663565b60405190151581526020016101f4565b34801561026e57600080fd5b50610277610679565b005b34801561028557600080fd5b506002545b6040519081526020016101f4565b3480156102a457600080fd5b506102526102b3366004611548565b610714565b3480156102c457600080fd5b50604051601281526020016101f4565b3480156102e057600080fd5b506102526102ef36600461151c565b6107d3565b34801561030057600080fd5b5061025261080f565b34801561031557600080fd5b50600c5461025290600160a01b900460ff1681565b34801561033657600080fd5b50610277610345366004611589565b6108ab565b34801561035657600080fd5b5061028a60085481565b34801561036c57600080fd5b5061028a61037b366004611589565b6001600160a01b031660009081526020819052604090205490565b3480156103a257600080fd5b50610277610934565b3480156103b757600080fd5b506007546103cb906001600160a01b031681565b6040516001600160a01b0390911681526020016101f4565b3480156103ef57600080fd5b506005546001600160a01b03166103cb565b34801561040d57600080fd5b506101e761099a565b34801561042257600080fd5b5061028a60095481565b34801561043857600080fd5b5061044c6104473660046115a6565b6109a9565b604080519384526020840192909252908201526060016101f4565b34801561047357600080fd5b5061025261048236600461151c565b610aa7565b34801561049357600080fd5b50600a546103cb9064010000000090046001600160a01b031681565b3480156104bb57600080fd5b506102526104ca36600461151c565b610b58565b3480156104db57600080fd5b506104ef6104ea3660046115c8565b610b65565b6040516101f491906115e1565b34801561050857600080fd5b50600c546103cb906001600160a01b031681565b34801561052857600080fd5b50600a546102529060ff1681565b34801561054257600080fd5b5061028a610551366004611625565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561058857600080fd5b50610277610d0d565b34801561059d57600080fd5b506102776105ac366004611589565b610d9d565b3480156105bd57600080fd5b50600b546103cb906001600160a01b031681565b6060600380546105e09061165e565b80601f016020809104026020016040519081016040528092919081815260200182805461060c9061165e565b80156106595780601f1061062e57610100808354040283529160200191610659565b820191906000526020600020905b81548152906001019060200180831161063c57829003601f168201915b5050505050905090565b6000610670338484610e7f565b50600192915050565b6005546001600160a01b031633146106d85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600c80547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff8116600160a01b9182900460ff1615909102179055565b6000610721848484610fd7565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156107bb5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084016106cf565b6107c88533858403610e7f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161067091859061080a9086906116ae565b610e7f565b6005546000906001600160a01b0316331461086c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106cf565b4761087f6005546001600160a01b031690565b6001600160a01b03166108fc829081150290604051600060405180830381858888f19695505050505050565b6005546001600160a01b031633146109055760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106cf565b6007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6005546001600160a01b0316331461098e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106cf565b610998600061120b565b565b6060600480546105e09061165e565b600b54600090819081906109cb9030906001600160a01b031661080a60025490565b600b546001600160a01b031663f305d7198530886000806109f46005546001600160a01b031690565b60405160e088901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610a74573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a9991906116c6565b919790965090945092505050565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610b415760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016106cf565b610b4e3385858403610e7f565b5060019392505050565b6000610670338484610fd7565b604080516002808252606080830184529260009291906020830190803683370190505090503081600081518110610b9e57610b9e61170a565b6001600160a01b03928316602091820292909201810191909152600b54604080517fad5c46480000000000000000000000000000000000000000000000000000000081529051919093169263ad5c46489260048083019391928290030181865afa158015610c10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c349190611720565b81600181518110610c4757610c4761170a565b6001600160a01b039283166020918202929092010152600b54610c6d9130911685610e7f565b600b546040517f18cbafe50000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906318cbafe590610cbf90869060009086903090429060040161173d565b6000604051808303816000875af1158015610cde573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d0691908101906117ae565b9392505050565b6005546001600160a01b03163314610d675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106cf565b600a805460ff19811660ff91821615908117909255161515600103610d925760636008556000600955565b600880556001600955565b6005546001600160a01b03163314610df75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106cf565b6001600160a01b038116610e735760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106cf565b610e7c8161120b565b50565b6001600160a01b038316610efa5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016106cf565b6001600160a01b038216610f765760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016106cf565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600c54600160a01b900460ff166110305760405162461bcd60e51b815260206004820152601660248201527f74726164696e67206973206e6f7420656e61626c65640000000000000000000060448201526064016106cf565b6005546001600160a01b03163314806110535750600b546001600160a01b031633145b156110685761106383838361126a565b505050565b600061108160095460085461148290919063ffffffff16565b9050600061109a6064611094858561148e565b9061149a565b905060006110a884836114a6565b905060006110b583610b65565b90506000816000815181106110cc576110cc61170a565b602002602001015190506000826001815181106110eb576110eb61170a565b6020026020010151905061111261110b83876114a690919063ffffffff16565b8590611482565b9350600061112f876110946008548561148e90919063ffffffff16565b9050600061114c886110946009548661148e90919063ffffffff16565b9050600061115b8a606461149a565b6007546040519192506001600160a01b03169084156108fc029085906000818181858888f19350505050158015611196573d6000803e3d6000fd5b50600954156111f2576111a981836109a9565b505060408051838152602081018590527fe74b04c1435e286c6b8eba73f0f16a0a2fcc9d21d879598ecacf17db8c49770192500160405180910390a16111ef87826114a6565b96505b6111fd8c8c8961126a565b505050505050505050505050565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0383166112e65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016106cf565b6001600160a01b0382166113625760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016106cf565b6001600160a01b038316600090815260208190526040902054818110156113f15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016106cf565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906114289084906116ae565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161147491815260200190565b60405180910390a350505050565b6000610d0682846116ae565b6000610d06828461186c565b6000610d06828461188b565b6000610d0682846118ad565b600060208083528351808285015260005b818110156114df578581018301518582016040015282016114c3565b818111156114f1576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610e7c57600080fd5b6000806040838503121561152f57600080fd5b823561153a81611507565b946020939093013593505050565b60008060006060848603121561155d57600080fd5b833561156881611507565b9250602084013561157881611507565b929592945050506040919091013590565b60006020828403121561159b57600080fd5b8135610d0681611507565b600080604083850312156115b957600080fd5b50508035926020909101359150565b6000602082840312156115da57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015611619578351835292840192918401916001016115fd565b50909695505050505050565b6000806040838503121561163857600080fd5b823561164381611507565b9150602083013561165381611507565b809150509250929050565b600181811c9082168061167257607f821691505b60208210810361169257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156116c1576116c1611698565b500190565b6000806000606084860312156116db57600080fd5b8351925060208401519150604084015190509250925092565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561173257600080fd5b8151610d0681611507565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b8181101561178d5784516001600160a01b031683529383019391830191600101611768565b50506001600160a01b03969096166060850152505050608001529392505050565b600060208083850312156117c157600080fd5b825167ffffffffffffffff808211156117d957600080fd5b818501915085601f8301126117ed57600080fd5b8151818111156117ff576117ff6116f4565b8060051b604051601f19603f83011681018181108582111715611824576118246116f4565b60405291825284820192508381018501918883111561184257600080fd5b938501935b8285101561186057845184529385019392850192611847565b98975050505050505050565b600081600019048311821515161561188657611886611698565b500290565b6000826118a857634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156118bf576118bf611698565b50039056fea2646970667358221220c7f6cfc7f7d4eaa542d449e093f7fa25c52bd79db626a379513cb607c9fc6a6264736f6c634300080d0033";

type DegenerateApePartyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DegenerateApePartyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DegenerateApeParty__factory extends ContractFactory {
  constructor(...args: DegenerateApePartyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DegenerateApeParty";
  }

  deploy(
    _routerAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DegenerateApeParty> {
    return super.deploy(
      _routerAddress,
      overrides || {}
    ) as Promise<DegenerateApeParty>;
  }
  getDeployTransaction(
    _routerAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_routerAddress, overrides || {});
  }
  attach(address: string): DegenerateApeParty {
    return super.attach(address) as DegenerateApeParty;
  }
  connect(signer: Signer): DegenerateApeParty__factory {
    return super.connect(signer) as DegenerateApeParty__factory;
  }
  static readonly contractName: "DegenerateApeParty";
  public readonly contractName: "DegenerateApeParty";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DegenerateApePartyInterface {
    return new utils.Interface(_abi) as DegenerateApePartyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DegenerateApeParty {
    return new Contract(address, _abi, signerOrProvider) as DegenerateApeParty;
  }
}
