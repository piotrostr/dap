/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DegenerateApeParty,
  DegenerateApePartyInterface,
} from "../DegenerateApeParty";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_routerAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "dapAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "AddedLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountDap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountETH",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountDap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "elevatedFees",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IPancakeFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketingWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "partyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "partyWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IPancakeRouter02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "setMarketingWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "setPartyWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountDap",
        type: "uint256",
      },
    ],
    name: "swapDapForEth",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleTrading",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradingEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526a084595161401484a0000006006556008600955600a80556001600b55600c80546209c40063ffffffff19909116179055600e805460ff60a01b1916600160a01b1790553480156200005557600080fd5b5060405162001ff738038062001ff78339810160408190526200007891620004e0565b60405180604001604052806012815260200171446567656e6572617465417065506172747960701b8152506040518060400160405280600381526020016204441560ec1b8152508160039080519060200190620000d79291906200043a565b508051620000ed9060049060208401906200043a565b5050506200010a62000104620002fc60201b60201c565b62000300565b6200012a620001216005546001600160a01b031690565b60065462000352565b600554600780546001600160a01b039283166001600160a01b03199182168117909255600880548216909217909155600d805492841692909116821790556040805163c45a015560e01b8152905163c45a0155916004808201926020929091908290030181865afa158015620001a4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001ca9190620004e0565b600e80546001600160a01b0319166001600160a01b03928316908117909155600d54604080516315ab88c960e31b81529051929363c9c653969330939091169163ad5c46489160048083019260209291908290030181865afa15801562000235573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200025b9190620004e0565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015620002a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002cf9190620004e0565b600c60046101000a8154816001600160a01b0302191690836001600160a01b031602179055505062000575565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620003ad5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620003c1919062000512565b90915550506001600160a01b03821660009081526020819052604081208054839290620003f090849062000512565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620004489062000539565b90600052602060002090601f0160209004810192826200046c5760008555620004b7565b82601f106200048757805160ff1916838001178555620004b7565b82800160010185558215620004b7579182015b82811115620004b75782518255916020019190600101906200049a565b50620004c5929150620004c9565b5090565b5b80821115620004c55760008155600101620004ca565b600060208284031215620004f357600080fd5b81516001600160a01b03811681146200050b57600080fd5b9392505050565b600082198211156200053457634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200054e57607f821691505b6020821081036200056f57634e487b7160e01b600052602260045260246000fd5b50919050565b611a7280620005856000396000f3fe6080604052600436106101e75760003560e01c80638da5cb5b11610102578063c45a015511610095578063e67c94d311610064578063e67c94d3146105c8578063f1256018146105e8578063f2fde38b14610608578063f887ea401461062857600080fd5b8063c45a015514610533578063d93e709d14610553578063dd62ed3e1461056d578063ddf54512146105b357600080fd5b8063a457c2d7116100d1578063a457c2d71461049e578063a8aa1b31146104be578063a9059cbb146104e6578063bf609c871461050657600080fd5b80638da5cb5b1461041a57806395d89b411461043857806398118cb41461044d5780639cd441da1461046357600080fd5b8063395093511161017a5780636b67c4df116101495780636b67c4df1461038157806370a0823114610397578063715018a6146103cd57806375f0a874146103e257600080fd5b8063395093511461030b5780633ccfd60b1461032b5780634ada218b146103405780635d098b381461036157600080fd5b806318160ddd116101b657806318160ddd1461029a57806323b872dd146102b95780632c6fa105146102d9578063313ce567146102ef57600080fd5b806306fdde03146101f3578063089fe6aa1461021e578063095ea7b3146102535780630f120fc31461028357600080fd5b366101ee57005b600080fd5b3480156101ff57600080fd5b50610208610648565b604051610215919061162a565b60405180910390f35b34801561022a57600080fd5b50600c5461023f90610100900462ffffff1681565b60405162ffffff9091168152602001610215565b34801561025f57600080fd5b5061027361026e366004611694565b6106da565b6040519015158152602001610215565b34801561028f57600080fd5b506102986106f0565b005b3480156102a657600080fd5b506002545b604051908152602001610215565b3480156102c557600080fd5b506102736102d43660046116c0565b61078b565b3480156102e557600080fd5b506102ab600a5481565b3480156102fb57600080fd5b5060405160128152602001610215565b34801561031757600080fd5b50610273610326366004611694565b61084a565b34801561033757600080fd5b50610273610886565b34801561034c57600080fd5b50600e5461027390600160a01b900460ff1681565b34801561036d57600080fd5b5061029861037c366004611701565b610922565b34801561038d57600080fd5b506102ab60095481565b3480156103a357600080fd5b506102ab6103b2366004611701565b6001600160a01b031660009081526020819052604090205490565b3480156103d957600080fd5b506102986109ab565b3480156103ee57600080fd5b50600754610402906001600160a01b031681565b6040516001600160a01b039091168152602001610215565b34801561042657600080fd5b506005546001600160a01b0316610402565b34801561044457600080fd5b50610208610a11565b34801561045957600080fd5b506102ab600b5481565b34801561046f57600080fd5b5061048361047e36600461171e565b610a20565b60408051938452602084019290925290820152606001610215565b3480156104aa57600080fd5b506102736104b9366004611694565b610b1e565b3480156104ca57600080fd5b50600c546104029064010000000090046001600160a01b031681565b3480156104f257600080fd5b50610273610501366004611694565b610bcf565b34801561051257600080fd5b50610526610521366004611740565b610bdc565b6040516102159190611759565b34801561053f57600080fd5b50600e54610402906001600160a01b031681565b34801561055f57600080fd5b50600c546102739060ff1681565b34801561057957600080fd5b506102ab61058836600461179d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3480156105bf57600080fd5b50610298610d84565b3480156105d457600080fd5b50600854610402906001600160a01b031681565b3480156105f457600080fd5b50610298610603366004611701565b610e1e565b34801561061457600080fd5b50610298610623366004611701565b610ea7565b34801561063457600080fd5b50600d54610402906001600160a01b031681565b606060038054610657906117d6565b80601f0160208091040260200160405190810160405280929190818152602001828054610683906117d6565b80156106d05780601f106106a5576101008083540402835291602001916106d0565b820191906000526020600020905b8154815290600101906020018083116106b357829003601f168201915b5050505050905090565b60006106e7338484610f89565b50600192915050565b6005546001600160a01b0316331461074f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600e80547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff8116600160a01b9182900460ff1615909102179055565b60006107988484846110e1565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156108325760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e63650000000000000000000000000000000000000000000000006064820152608401610746565b61083f8533858403610f89565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916106e7918590610881908690611826565b610f89565b6005546000906001600160a01b031633146108e35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610746565b476108f66005546001600160a01b031690565b6001600160a01b03166108fc829081150290604051600060405180830381858888f19695505050505050565b6005546001600160a01b0316331461097c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610746565b6007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6005546001600160a01b03163314610a055760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610746565b610a0f6000611383565b565b606060048054610657906117d6565b600d5460009081908190610a429030906001600160a01b031661088160025490565b600d546001600160a01b031663f305d719853088600080610a6b6005546001600160a01b031690565b60405160e088901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015610aeb573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b10919061183e565b919790965090945092505050565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610bb85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610746565b610bc53385858403610f89565b5060019392505050565b60006106e73384846110e1565b604080516002808252606080830184529260009291906020830190803683370190505090503081600081518110610c1557610c15611882565b6001600160a01b03928316602091820292909201810191909152600d54604080517fad5c46480000000000000000000000000000000000000000000000000000000081529051919093169263ad5c46489260048083019391928290030181865afa158015610c87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cab9190611898565b81600181518110610cbe57610cbe611882565b6001600160a01b039283166020918202929092010152600d54610ce49130911685610f89565b600d546040517f18cbafe50000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906318cbafe590610d369086906000908690309042906004016118b5565b6000604051808303816000875af1158015610d55573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d7d9190810190611926565b9392505050565b6005546001600160a01b03163314610dde5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610746565b600c805460ff19811660ff91821615908117909255161515600103610e0e5760636009556000600a819055600b55565b6008600955600a80556001600b55565b6005546001600160a01b03163314610e785760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610746565b6008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6005546001600160a01b03163314610f015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610746565b6001600160a01b038116610f7d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610746565b610f8681611383565b50565b6001600160a01b0383166110045760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610746565b6001600160a01b0382166110805760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610746565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600e54600160a01b900460ff1661113a5760405162461bcd60e51b815260206004820152601660248201527f74726164696e67206973206e6f7420656e61626c6564000000000000000000006044820152606401610746565b6005546001600160a01b031633148061115d5750600d546001600160a01b031633145b156111725761116d8383836113e2565b505050565b6000611197600b54611191600a546009546115fa90919063ffffffff16565b906115fa565b905060006111b060646111aa8585611606565b90611612565b905060006111be848361161e565b905060006111cb83610bdc565b90506000816000815181106111e2576111e2611882565b6020026020010151905060008260018151811061120157611201611882565b60200260200101519050611228611221838761161e90919063ffffffff16565b85906115fa565b93506000611245876111aa6009548561160690919063ffffffff16565b90506000611262886111aa600a548661160690919063ffffffff16565b9050600061127f896111aa600b548761160690919063ffffffff16565b9050600061128e8b6064611612565b6007546040519192506001600160a01b03169085156108fc029086906000818181858888f193505050501580156112c9573d6000803e3d6000fd5b50600a541561130e576008546040516001600160a01b039091169084156108fc029085906000818181858888f1935050505015801561130c573d6000803e3d6000fd5b505b600b5415611369576113208183610a20565b505060408051838152602081018590527fe74b04c1435e286c6b8eba73f0f16a0a2fcc9d21d879598ecacf17db8c49770192500160405180910390a1611366888261161e565b97505b6113748d8d8a6113e2565b50505050505050505050505050565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03831661145e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610746565b6001600160a01b0382166114da5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610746565b6001600160a01b038316600090815260208190526040902054818110156115695760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610746565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906115a0908490611826565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516115ec91815260200190565b60405180910390a350505050565b6000610d7d8284611826565b6000610d7d82846119e4565b6000610d7d8284611a03565b6000610d7d8284611a25565b600060208083528351808285015260005b818110156116575785810183015185820160400152820161163b565b81811115611669576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610f8657600080fd5b600080604083850312156116a757600080fd5b82356116b28161167f565b946020939093013593505050565b6000806000606084860312156116d557600080fd5b83356116e08161167f565b925060208401356116f08161167f565b929592945050506040919091013590565b60006020828403121561171357600080fd5b8135610d7d8161167f565b6000806040838503121561173157600080fd5b50508035926020909101359150565b60006020828403121561175257600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561179157835183529284019291840191600101611775565b50909695505050505050565b600080604083850312156117b057600080fd5b82356117bb8161167f565b915060208301356117cb8161167f565b809150509250929050565b600181811c908216806117ea57607f821691505b60208210810361180a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561183957611839611810565b500190565b60008060006060848603121561185357600080fd5b8351925060208401519150604084015190509250925092565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000602082840312156118aa57600080fd5b8151610d7d8161167f565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156119055784516001600160a01b0316835293830193918301916001016118e0565b50506001600160a01b03969096166060850152505050608001529392505050565b6000602080838503121561193957600080fd5b825167ffffffffffffffff8082111561195157600080fd5b818501915085601f83011261196557600080fd5b8151818111156119775761197761186c565b8060051b604051601f19603f8301168101818110858211171561199c5761199c61186c565b6040529182528482019250838101850191888311156119ba57600080fd5b938501935b828510156119d8578451845293850193928501926119bf565b98975050505050505050565b60008160001904831182151516156119fe576119fe611810565b500290565b600082611a2057634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611a3757611a37611810565b50039056fea2646970667358221220316224f4110f7ffdb87b7a8594f969d89bba272eee8057ab7ef364de866d9dad64736f6c634300080d0033";

type DegenerateApePartyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DegenerateApePartyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DegenerateApeParty__factory extends ContractFactory {
  constructor(...args: DegenerateApePartyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DegenerateApeParty";
  }

  deploy(
    _routerAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DegenerateApeParty> {
    return super.deploy(
      _routerAddress,
      overrides || {}
    ) as Promise<DegenerateApeParty>;
  }
  getDeployTransaction(
    _routerAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_routerAddress, overrides || {});
  }
  attach(address: string): DegenerateApeParty {
    return super.attach(address) as DegenerateApeParty;
  }
  connect(signer: Signer): DegenerateApeParty__factory {
    return super.connect(signer) as DegenerateApeParty__factory;
  }
  static readonly contractName: "DegenerateApeParty";
  public readonly contractName: "DegenerateApeParty";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DegenerateApePartyInterface {
    return new utils.Interface(_abi) as DegenerateApePartyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DegenerateApeParty {
    return new Contract(address, _abi, signerOrProvider) as DegenerateApeParty;
  }
}
